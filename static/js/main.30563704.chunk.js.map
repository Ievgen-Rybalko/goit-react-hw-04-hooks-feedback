{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Notification.js","components/Section/Section.js","components/Statistics/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onFeedbackButton","className","styles","button__list","map","option","onClick","button","charAt","toUpperCase","slice","Notification","message","notification","Section","title","children","section","container","Statistics","bad","neutral","good","total","positivePercentage","statictics__item","App","useState","setGood","setNeutral","setBad","totalFeed","buttonId","prevState","Math","round","countPositiveFeedbackPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,iBAAmB,qCAAqC,aAAe,mC,kBCAzFD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,OAAS,kC,gBCAhFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,6B,wJCqBlDC,EApBS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBAClC,OACE,qBAAKC,UAAWC,IAAOC,aAAvB,SACE,6BACGJ,EAAQK,KAAI,SAAAC,GACX,OACE,wBAEEC,QAAS,kBAAMN,EAAiBK,IAChCJ,UAAWC,IAAOK,OAHpB,SAKGF,EAAOG,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,IAJ1CL,W,gBCHJM,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGX,UAAWC,IAAOW,aAArB,SAAoCD,K,gBCMvBE,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKf,UAAWC,IAAOe,QAAU,IAAMf,IAAOgB,UAA9C,UACGH,GAAS,mCAAMA,KACfC,MCSUG,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,oBAAGvB,UAAWC,IAAOuB,iBAArB,mBAA8CH,KAC9C,oBAAGrB,UAAWC,IAAOuB,iBAArB,sBAAiDJ,KACjD,oBAAGpB,UAAWC,IAAOuB,iBAArB,kBAA6CL,KAC7C,oBAAGnB,UAAWC,IAAOuB,iBAArB,oBAA+CF,KAC/C,oBAAGtB,UAAWC,IAAOuB,iBAArB,gCACsBD,EADtB,IAC2C,W,MCDhC,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOL,EAAP,KAAaM,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAEMC,EAAYT,EAAOD,EAAUD,EAiCnC,OACE,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,CAASc,MAAM,wBAAf,SACE,cAAC,EAAD,CACEhB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,iBApCgB,SAAAgC,GAGtB,OAAQA,GACN,IAAK,OACHJ,GAAQ,SAAAK,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHJ,GAAW,SAAAI,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHH,GAAO,SAAAG,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAyBF,cAAC,EAAD,CAASlB,MAAM,aAAf,SACiB,IAAdgB,EACC,cAAC,EAAD,CAAcnB,QAAQ,sBAEtB,cAAC,EAAD,CACEU,KAAMA,EACND,QAASA,EACTD,IAAKA,EACLG,MA5BDD,EAAOF,EAAMC,EA6BZG,mBA1B8B,WACtC,IAAMD,EAAQD,EAAOD,EAAUD,EAC/B,OAAc,IAAVG,EACK,EAEFW,KAAKC,MAAOb,EAAOC,EAAS,KAqBPa,UChEhC,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.30563704.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statictics__item\":\"Statistics_statictics__item__2535V\",\"notification\":\"Statistics_notification__2jcX1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__list\":\"FeedbackOptions_button__list__3j3Y9\",\"button\":\"FeedbackOptions_button__2pmDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2987g\",\"container\":\"Section_container__hl8Zk\"};","import styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onFeedbackButton }) => {\n  return (\n    <div className={styles.button__list}>\n      <ul>\n        {options.map(option => {\n          return (\n            <button\n              key={option}\n              onClick={() => onFeedbackButton(option)}\n              className={styles.button}\n            >\n              {option.charAt(0).toUpperCase() + option.slice(1)}\n            </button>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import styles from './Statistics.module.css';\n\nconst Notification = ({ message }) => (\n  <p className={styles.notification}>{message}</p>\n);\n\nexport default Notification;\n","import styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={styles.section + ' ' + styles.container}>\n    {title && <h2> {title}</h2>}\n    {children}\n  </div>\n);\n\nexport default Section;\n","import styles from './Statistics.module.css';\n\nconst Statistics = ({ bad, neutral, good, total, positivePercentage }) => (\n  <div>\n    <p className={styles.statictics__item}>Good: {good}</p>\n    <p className={styles.statictics__item}>Neutral: {neutral}</p>\n    <p className={styles.statictics__item}>Bad: {bad}</p>\n    <p className={styles.statictics__item}>Total: {total}</p>\n    <p className={styles.statictics__item}>\n      Positive feedback: {positivePercentage}%{' '}\n    </p>\n  </div>\n);\n\nexport default Statistics;\n","import { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Statistics/Notification';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\n\nimport './App.css';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const totalFeed = good + neutral + bad;\n\n  const onLeaveFeedback = buttonId => {\n    //console.log('buttonId', buttonId, typeof(buttonId));\n\n    switch (buttonId) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + bad + neutral;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = good + neutral + bad;\n    if (total === 0) {\n      return 0;\n    }\n    return Math.round((good / total) * 100);\n  };\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onFeedbackButton={onLeaveFeedback}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {totalFeed === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}