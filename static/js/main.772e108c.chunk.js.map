{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Notification.js","components/Section/Section.js","components/Statistics/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onFeedbackButton","className","styles","button__list","map","option","onClick","button","charAt","toUpperCase","slice","Notification","message","notification","Section","title","children","section","container","Statistics","bad","neutral","good","total","positivePercentage","statictics__item","App","useState","setGood","setNeutral","setBad","totalFeed","buttonId","prevState","Math","round","countPositiveFeedbackPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,iBAAmB,qCAAqC,aAAe,mC,kBCAzFD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,OAAS,kC,gBCAhFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,6B,wJCuBlDC,EAtBS,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBAEjC,OACE,qBAAKC,UAAWC,IAAOC,aAAvB,SACE,6BACEJ,EAAQK,KAAI,SAACC,GACZ,OACC,wBAEEC,QAAS,kBAAMN,EAAiBK,IAChCJ,UAAWC,IAAOK,OAHpB,SAKCF,EAAOG,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,IAJxCL,W,gBCJFM,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGX,UAAWC,IAAOW,aAArB,SAAoCD,K,gBCMvBE,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKf,UAAWC,IAAOe,QAAU,IAAMf,IAAOgB,UAA9C,UACGH,GAAS,mCAAMA,KACfC,MCSUG,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,oBAAGvB,UAAWC,IAAOuB,iBAArB,mBAA8CH,KAC9C,oBAAGrB,UAAWC,IAAOuB,iBAArB,sBAAiDJ,KACjD,oBAAGpB,UAAWC,IAAOuB,iBAArB,kBAA6CL,KAC7C,oBAAGnB,UAAWC,IAAOuB,iBAArB,oBAA+CF,KAC/C,oBAAGtB,UAAWC,IAAOuB,iBAArB,gCACsBD,EADtB,IAC2C,W,MCAhC,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOL,EAAP,KAAaM,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAEMC,EAAYT,EAAOD,EAAUD,EAiCjC,OACE,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,CAASc,MAAM,wBAAf,SACE,cAAC,EAAD,CACEhB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,iBApCc,SAAAgC,GAGpB,OAAQA,GACN,IAAK,OACHJ,GAAQ,SAAAK,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHJ,GAAW,SAAAI,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHH,GAAO,SAAAG,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAyBF,cAAC,EAAD,CAASlB,MAAM,aAAf,SACiB,IAAdgB,EACC,cAAC,EAAD,CAAcnB,QAAQ,sBAEtB,cAAC,EAAD,CACEU,KAAMA,EACND,QAASA,EACTD,IAAKA,EACLG,MA5BDD,EAAOF,EAAMC,EA6BZG,mBA1B8B,WACtC,IAAMD,EAAQD,EAAOD,EAAUD,EAC/B,OAAc,IAAVG,EACK,EAEFW,KAAKC,MAAOb,EAAOC,EAAS,KAqBPa,UCjElC,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.772e108c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statictics__item\":\"Statistics_statictics__item__2535V\",\"notification\":\"Statistics_notification__2jcX1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__list\":\"FeedbackOptions_button__list__3j3Y9\",\"button\":\"FeedbackOptions_button__2pmDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2987g\",\"container\":\"Section_container__hl8Zk\"};","import styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({options, onFeedbackButton }) => {\r\n  \r\n  return (\r\n    <div className={styles.button__list}>\r\n      <ul>\r\n       {options.map((option)=>{\r\n         return (\r\n          <button\r\n            key={option}\r\n            onClick={() => onFeedbackButton(option)}\r\n            className={styles.button}\r\n          >\r\n          {option.charAt(0).toUpperCase() + option.slice(1)}\r\n          </button>\r\n        );\r\n       })}\r\n     </ul>\r\n    </div>    \r\n\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;","import styles from './Statistics.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.notification}>{message}</p>\r\n);\r\n\r\nexport default Notification;\r\n","import styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={styles.section + ' ' + styles.container}>\r\n    {title && <h2> {title}</h2>}\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Section;","import styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ bad, neutral, good, total, positivePercentage }) => (\r\n  <div>\r\n    <p className={styles.statictics__item}>Good: {good}</p>\r\n    <p className={styles.statictics__item}>Neutral: {neutral}</p>\r\n    <p className={styles.statictics__item}>Bad: {bad}</p>\r\n    <p className={styles.statictics__item}>Total: {total}</p>\r\n    <p className={styles.statictics__item}>\r\n      Positive feedback: {positivePercentage}%{' '}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","import { useState } from 'react';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Notification from './components/Statistics/Notification';\r\nimport Section from './components/Section/Section';\r\nimport Statistics from './components/Statistics/Statistics';\r\n\r\nimport './App.css';\r\n\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const totalFeed = good + neutral + bad;\r\n\r\n  const onLeaveFeedback = buttonId => {\r\n    //console.log('buttonId', buttonId, typeof(buttonId));\r\n    \r\n      switch (buttonId) {\r\n        case 'good':\r\n          setGood(prevState => prevState + 1);\r\n          break;\r\n        case 'neutral':\r\n          setNeutral(prevState => prevState + 1);\r\n          break;\r\n        case 'bad':\r\n          setBad(prevState => prevState + 1);\r\n          break;\r\n        \r\n        default:\r\n          return;\r\n      };\r\n    };\r\n    \r\n    const countTotalFeedback = () => {\r\n      return good + bad + neutral;\r\n    };\r\n\r\n    const countPositiveFeedbackPercentage = () => {\r\n      const total = good + neutral + bad;\r\n      if (total === 0) {\r\n        return 0;\r\n      }\r\n      return Math.round((good / total) * 100);\r\n    };\r\n      \r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={['good', 'neutral', 'bad']}\r\n            onFeedbackButton={onLeaveFeedback} \r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {totalFeed === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotalFeedback()}\r\n              positivePercentage={countPositiveFeedbackPercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}